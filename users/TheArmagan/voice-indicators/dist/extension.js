(function (Ke, We, p, Je, Xe, Ge, Qe, et, tt, nt) {
  "use strict"; function T(n) { return n && typeof n == "object" && "default" in n ? n : { default: n } } function st(n) { if (n && n.__esModule) return n; var e = Object.create(null); return n && Object.keys(n).forEach(function (t) { if (t !== "default") { var s = Object.getOwnPropertyDescriptor(n, t); Object.defineProperty(e, t, s.get ? s : { enumerable: !0, get: function () { return n[t] } }) } }), e.default = n, Object.freeze(e) } var B = T(Ke), oe = T(We), K = T(Je), ae = T(Xe), q = T(Ge), u = st(Qe), W = T(et), ce = T(tt); const C = Object.create(null); C.open = "0", C.close = "1", C.ping = "2", C.pong = "3", C.message = "4", C.upgrade = "5", C.noop = "6"; const H = Object.create(null); Object.keys(C).forEach(n => { H[C[n]] = n }); const it = { type: "error", data: "parser error" }, rt = typeof Blob == "function" || typeof Blob < "u" && Object.prototype.toString.call(Blob) === "[object BlobConstructor]", ot = typeof ArrayBuffer == "function", at = n => typeof ArrayBuffer.isView == "function" ? ArrayBuffer.isView(n) : n && n.buffer instanceof ArrayBuffer, le = ({ type: n, data: e }, t, s) => rt && e instanceof Blob ? t ? s(e) : he(e, s) : ot && (e instanceof ArrayBuffer || at(e)) ? t ? s(e) : he(new Blob([e]), s) : s(C[n] + (e || "")), he = (n, e) => { const t = new FileReader; return t.onload = function () { const s = t.result.split(",")[1]; e("b" + s) }, t.readAsDataURL(n) }, ue = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", V = typeof Uint8Array > "u" ? [] : new Uint8Array(256); for (let n = 0; n < ue.length; n++)V[ue.charCodeAt(n)] = n; const ct = n => { let e = n.length * .75, t = n.length, s, i = 0, r, o, a, h; n[n.length - 1] === "=" && (e--, n[n.length - 2] === "=" && e--); const f = new ArrayBuffer(e), v = new Uint8Array(f); for (s = 0; s < t; s += 4)r = V[n.charCodeAt(s)], o = V[n.charCodeAt(s + 1)], a = V[n.charCodeAt(s + 2)], h = V[n.charCodeAt(s + 3)], v[i++] = r << 2 | o >> 4, v[i++] = (o & 15) << 4 | a >> 2, v[i++] = (a & 3) << 6 | h & 63; return f }, lt = typeof ArrayBuffer == "function", de = (n, e) => { if (typeof n != "string") return { type: "message", data: fe(n, e) }; const t = n.charAt(0); return t === "b" ? { type: "message", data: ht(n.substring(1), e) } : H[t] ? n.length > 1 ? { type: H[t], data: n.substring(1) } : { type: H[t] } : it }, ht = (n, e) => { if (lt) { const t = ct(n); return fe(t, e) } else return { base64: !0, data: n } }, fe = (n, e) => { switch (e) { case "blob": return n instanceof ArrayBuffer ? new Blob([n]) : n; case "arraybuffer": default: return n } }, pe = String.fromCharCode(30), ut = (n, e) => { const t = n.length, s = new Array(t); let i = 0; n.forEach((r, o) => { le(r, !1, a => { s[o] = a, ++i === t && e(s.join(pe)) }) }) }, dt = (n, e) => { const t = n.split(pe), s = []; for (let i = 0; i < t.length; i++) { const r = de(t[i], e); if (s.push(r), r.type === "error") break } return s }, me = 4; function d(n) { if (n) return ft(n) } function ft(n) { for (var e in d.prototype) n[e] = d.prototype[e]; return n } d.prototype.on = d.prototype.addEventListener = function (n, e) { return this._callbacks = this._callbacks || {}, (this._callbacks["$" + n] = this._callbacks["$" + n] || []).push(e), this }, d.prototype.once = function (n, e) { function t() { this.off(n, t), e.apply(this, arguments) } return t.fn = e, this.on(n, t), this }, d.prototype.off = d.prototype.removeListener = d.prototype.removeAllListeners = d.prototype.removeEventListener = function (n, e) { if (this._callbacks = this._callbacks || {}, arguments.length == 0) return this._callbacks = {}, this; var t = this._callbacks["$" + n]; if (!t) return this; if (arguments.length == 1) return delete this._callbacks["$" + n], this; for (var s, i = 0; i < t.length; i++)if (s = t[i], s === e || s.fn === e) { t.splice(i, 1); break } return t.length === 0 && delete this._callbacks["$" + n], this }, d.prototype.emit = function (n) { this._callbacks = this._callbacks || {}; for (var e = new Array(arguments.length - 1), t = this._callbacks["$" + n], s = 1; s < arguments.length; s++)e[s - 1] = arguments[s]; if (t) { t = t.slice(0); for (var s = 0, i = t.length; s < i; ++s)t[s].apply(this, e) } return this }, d.prototype.emitReserved = d.prototype.emit, d.prototype.listeners = function (n) { return this._callbacks = this._callbacks || {}, this._callbacks["$" + n] || [] }, d.prototype.hasListeners = function (n) { return !!this.listeners(n).length }; const x = (() => typeof self < "u" ? self : typeof window < "u" ? window : Function("return this")())(); function ye(n, ...e) { return e.reduce((t, s) => (n.hasOwnProperty(s) && (t[s] = n[s]), t), {}) } const pt = setTimeout, mt = clearTimeout; function U(n, e) { e.useNativeTimers ? (n.setTimeoutFn = pt.bind(x), n.clearTimeoutFn = mt.bind(x)) : (n.setTimeoutFn = setTimeout.bind(x), n.clearTimeoutFn = clearTimeout.bind(x)) } const yt = 1.33; function gt(n) { return typeof n == "string" ? vt(n) : Math.ceil((n.byteLength || n.size) * yt) } function vt(n) { let e = 0, t = 0; for (let s = 0, i = n.length; s < i; s++)e = n.charCodeAt(s), e < 128 ? t += 1 : e < 2048 ? t += 2 : e < 55296 || e >= 57344 ? t += 3 : (s++, t += 4); return t } class bt extends Error { constructor(e, t, s) { super(e), this.description = t, this.context = s, this.type = "TransportError" } } class ge extends d { constructor(e) { super(), this.writable = !1, U(this, e), this.opts = e, this.query = e.query, this.readyState = "", this.socket = e.socket } onError(e, t, s) { return super.emitReserved("error", new bt(e, t, s)), this } open() { return (this.readyState === "closed" || this.readyState === "") && (this.readyState = "opening", this.doOpen()), this } close() { return (this.readyState === "opening" || this.readyState === "open") && (this.doClose(), this.onClose()), this } send(e) { this.readyState === "open" && this.write(e) } onOpen() { this.readyState = "open", this.writable = !0, super.emitReserved("open") } onData(e) { const t = de(e, this.socket.binaryType); this.onPacket(t) } onPacket(e) { super.emitReserved("packet", e) } onClose(e) { this.readyState = "closed", super.emitReserved("close", e) } } const ve = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_".split(""), J = 64, Ct = {}; let be = 0, z = 0, Ce; function we(n) { let e = ""; do e = ve[n % J] + e, n = Math.floor(n / J); while (n > 0); return e } function Ee() { const n = we(+new Date); return n !== Ce ? (be = 0, Ce = n) : n + "." + we(be++) } for (; z < J; z++)Ct[ve[z]] = z; function ke(n) { let e = ""; for (let t in n) n.hasOwnProperty(t) && (e.length && (e += "&"), e += encodeURIComponent(t) + "=" + encodeURIComponent(n[t])); return e } function wt(n) { let e = {}, t = n.split("&"); for (let s = 0, i = t.length; s < i; s++) { let r = t[s].split("="); e[decodeURIComponent(r[0])] = decodeURIComponent(r[1]) } return e } let xe = !1; try { xe = typeof XMLHttpRequest < "u" && "withCredentials" in new XMLHttpRequest } catch { } const Et = xe; function Ae(n) { const e = n.xdomain; try { if (typeof XMLHttpRequest < "u" && (!e || Et)) return new XMLHttpRequest } catch { } if (!e) try { return new x[["Active"].concat("Object").join("X")]("Microsoft.XMLHTTP") } catch { } } function kt() { } const xt = function () { return new Ae({ xdomain: !1 }).responseType != null }(); class At extends ge { constructor(e) { if (super(e), this.polling = !1, typeof location < "u") { const s = location.protocol === "https:"; let i = location.port; i || (i = s ? "443" : "80"), this.xd = typeof location < "u" && e.hostname !== location.hostname || i !== e.port, this.xs = e.secure !== s } const t = e && e.forceBase64; this.supportsBinary = xt && !t } get name() { return "polling" } doOpen() { this.poll() } pause(e) { this.readyState = "pausing"; const t = () => { this.readyState = "paused", e() }; if (this.polling || !this.writable) { let s = 0; this.polling && (s++, this.once("pollComplete", function () { --s || t() })), this.writable || (s++, this.once("drain", function () { --s || t() })) } else t() } poll() { this.polling = !0, this.doPoll(), this.emitReserved("poll") } onData(e) { const t = s => { if (this.readyState === "opening" && s.type === "open" && this.onOpen(), s.type === "close") return this.onClose({ description: "transport closed by the server" }), !1; this.onPacket(s) }; dt(e, this.socket.binaryType).forEach(t), this.readyState !== "closed" && (this.polling = !1, this.emitReserved("pollComplete"), this.readyState === "open" && this.poll()) } doClose() { const e = () => { this.write([{ type: "close" }]) }; this.readyState === "open" ? e() : this.once("open", e) } write(e) { this.writable = !1, ut(e, t => { this.doWrite(t, () => { this.writable = !0, this.emitReserved("drain") }) }) } uri() { let e = this.query || {}; const t = this.opts.secure ? "https" : "http"; let s = ""; this.opts.timestampRequests !== !1 && (e[this.opts.timestampParam] = Ee()), !this.supportsBinary && !e.sid && (e.b64 = 1), this.opts.port && (t === "https" && Number(this.opts.port) !== 443 || t === "http" && Number(this.opts.port) !== 80) && (s = ":" + this.opts.port); const i = ke(e), r = this.opts.hostname.indexOf(":") !== -1; return t + "://" + (r ? "[" + this.opts.hostname + "]" : this.opts.hostname) + s + this.opts.path + (i.length ? "?" + i : "") } request(e = {}) { return Object.assign(e, { xd: this.xd, xs: this.xs }, this.opts), new w(this.uri(), e) } doWrite(e, t) { const s = this.request({ method: "POST", data: e }); s.on("success", t), s.on("error", (i, r) => { this.onError("xhr post error", i, r) }) } doPoll() { const e = this.request(); e.on("data", this.onData.bind(this)), e.on("error", (t, s) => { this.onError("xhr poll error", t, s) }), this.pollXhr = e } } class w extends d { constructor(e, t) { super(), U(this, t), this.opts = t, this.method = t.method || "GET", this.uri = e, this.async = t.async !== !1, this.data = t.data !== void 0 ? t.data : null, this.create() } create() { const e = ye(this.opts, "agent", "pfx", "key", "passphrase", "cert", "ca", "ciphers", "rejectUnauthorized", "autoUnref"); e.xdomain = !!this.opts.xd, e.xscheme = !!this.opts.xs; const t = this.xhr = new Ae(e); try { t.open(this.method, this.uri, this.async); try { if (this.opts.extraHeaders) { t.setDisableHeaderCheck && t.setDisableHeaderCheck(!0); for (let s in this.opts.extraHeaders) this.opts.extraHeaders.hasOwnProperty(s) && t.setRequestHeader(s, this.opts.extraHeaders[s]) } } catch { } if (this.method === "POST") try { t.setRequestHeader("Content-type", "text/plain;charset=UTF-8") } catch { } try { t.setRequestHeader("Accept", "*/*") } catch { } "withCredentials" in t && (t.withCredentials = this.opts.withCredentials), this.opts.requestTimeout && (t.timeout = this.opts.requestTimeout), t.onreadystatechange = () => { t.readyState === 4 && (t.status === 200 || t.status === 1223 ? this.onLoad() : this.setTimeoutFn(() => { this.onError(typeof t.status == "number" ? t.status : 0) }, 0)) }, t.send(this.data) } catch (s) { this.setTimeoutFn(() => { this.onError(s) }, 0); return } typeof document < "u" && (this.index = w.requestsCount++, w.requests[this.index] = this) } onError(e) { this.emitReserved("error", e, this.xhr), this.cleanup(!0) } cleanup(e) { if (!(typeof this.xhr > "u" || this.xhr === null)) { if (this.xhr.onreadystatechange = kt, e) try { this.xhr.abort() } catch { } typeof document < "u" && delete w.requests[this.index], this.xhr = null } } onLoad() { const e = this.xhr.responseText; e !== null && (this.emitReserved("data", e), this.emitReserved("success"), this.cleanup()) } abort() { this.cleanup() } } if (w.requestsCount = 0, w.requests = {}, typeof document < "u") { if (typeof attachEvent == "function") attachEvent("onunload", Ne); else if (typeof addEventListener == "function") { const n = "onpagehide" in x ? "pagehide" : "unload"; addEventListener(n, Ne, !1) } } function Ne() { for (let n in w.requests) w.requests.hasOwnProperty(n) && w.requests[n].abort() } const Nt = (() => typeof Promise == "function" && typeof Promise.resolve == "function" ? e => Promise.resolve().then(e) : (e, t) => t(e, 0))(), F = x.WebSocket || x.MozWebSocket, Te = !0, Tt = "arraybuffer", _e = typeof navigator < "u" && typeof navigator.product == "string" && navigator.product.toLowerCase() === "reactnative"; class _t extends ge { constructor(e) { super(e), this.supportsBinary = !e.forceBase64 } get name() { return "websocket" } doOpen() { if (!this.check()) return; const e = this.uri(), t = this.opts.protocols, s = _e ? {} : ye(this.opts, "agent", "perMessageDeflate", "pfx", "key", "passphrase", "cert", "ca", "ciphers", "rejectUnauthorized", "localAddress", "protocolVersion", "origin", "maxPayload", "family", "checkServerIdentity"); this.opts.extraHeaders && (s.headers = this.opts.extraHeaders); try { this.ws = Te && !_e ? t ? new F(e, t) : new F(e) : new F(e, t, s) } catch (i) { return this.emitReserved("error", i) } this.ws.binaryType = this.socket.binaryType || Tt, this.addEventListeners() } addEventListeners() { this.ws.onopen = () => { this.opts.autoUnref && this.ws._socket.unref(), this.onOpen() }, this.ws.onclose = e => this.onClose({ description: "websocket connection closed", context: e }), this.ws.onmessage = e => this.onData(e.data), this.ws.onerror = e => this.onError("websocket error", e) } write(e) { this.writable = !1; for (let t = 0; t < e.length; t++) { const s = e[t], i = t === e.length - 1; le(s, this.supportsBinary, r => { const o = {}; try { Te && this.ws.send(r) } catch { } i && Nt(() => { this.writable = !0, this.emitReserved("drain") }, this.setTimeoutFn) }) } } doClose() { typeof this.ws < "u" && (this.ws.close(), this.ws = null) } uri() { let e = this.query || {}; const t = this.opts.secure ? "wss" : "ws"; let s = ""; this.opts.port && (t === "wss" && Number(this.opts.port) !== 443 || t === "ws" && Number(this.opts.port) !== 80) && (s = ":" + this.opts.port), this.opts.timestampRequests && (e[this.opts.timestampParam] = Ee()), this.supportsBinary || (e.b64 = 1); const i = ke(e), r = this.opts.hostname.indexOf(":") !== -1; return t + "://" + (r ? "[" + this.opts.hostname + "]" : this.opts.hostname) + s + this.opts.path + (i.length ? "?" + i : "") } check() { return !!F } } const Rt = { websocket: _t, polling: At }, St = /^(?:(?![^:@]+:[^:@\/]*@)(http|https|ws|wss):\/\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\/?#]*)(?::(\d*))?)(((\/(?:[^?#](?![^?#\/]*\.[^?#\/.]+(?:[?#]|$)))*\/?)?([^?#\/]*))(?:\?([^#]*))?(?:#(.*))?)/, Lt = ["source", "protocol", "authority", "userInfo", "user", "password", "host", "port", "relative", "path", "directory", "file", "query", "anchor"]; function X(n) { const e = n, t = n.indexOf("["), s = n.indexOf("]"); t != -1 && s != -1 && (n = n.substring(0, t) + n.substring(t, s).replace(/:/g, ";") + n.substring(s, n.length)); let i = St.exec(n || ""), r = {}, o = 14; for (; o--;)r[Lt[o]] = i[o] || ""; return t != -1 && s != -1 && (r.source = e, r.host = r.host.substring(1, r.host.length - 1).replace(/;/g, ":"), r.authority = r.authority.replace("[", "").replace("]", "").replace(/;/g, ":"), r.ipv6uri = !0), r.pathNames = Ot(r, r.path), r.queryKey = It(r, r.query), r } function Ot(n, e) { const t = /\/{2,9}/g, s = e.replace(t, "/").split("/"); return (e.substr(0, 1) == "/" || e.length === 0) && s.splice(0, 1), e.substr(e.length - 1, 1) == "/" && s.splice(s.length - 1, 1), s } function It(n, e) { const t = {}; return e.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function (s, i, r) { i && (t[i] = r) }), t } class A extends d { constructor(e, t = {}) { super(), e && typeof e == "object" && (t = e, e = null), e ? (e = X(e), t.hostname = e.host, t.secure = e.protocol === "https" || e.protocol === "wss", t.port = e.port, e.query && (t.query = e.query)) : t.host && (t.hostname = X(t.host).host), U(this, t), this.secure = t.secure != null ? t.secure : typeof location < "u" && location.protocol === "https:", t.hostname && !t.port && (t.port = this.secure ? "443" : "80"), this.hostname = t.hostname || (typeof location < "u" ? location.hostname : "localhost"), this.port = t.port || (typeof location < "u" && location.port ? location.port : this.secure ? "443" : "80"), this.transports = t.transports || ["polling", "websocket"], this.readyState = "", this.writeBuffer = [], this.prevBufferLen = 0, this.opts = Object.assign({ path: "/engine.io", agent: !1, withCredentials: !1, upgrade: !0, timestampParam: "t", rememberUpgrade: !1, rejectUnauthorized: !0, perMessageDeflate: { threshold: 1024 }, transportOptions: {}, closeOnBeforeunload: !0 }, t), this.opts.path = this.opts.path.replace(/\/$/, "") + "/", typeof this.opts.query == "string" && (this.opts.query = wt(this.opts.query)), this.id = null, this.upgrades = null, this.pingInterval = null, this.pingTimeout = null, this.pingTimeoutTimer = null, typeof addEventListener == "function" && (this.opts.closeOnBeforeunload && addEventListener("beforeunload", () => { this.transport && (this.transport.removeAllListeners(), this.transport.close()) }, !1), this.hostname !== "localhost" && (this.offlineEventListener = () => { this.onClose("transport close", { description: "network connection lost" }) }, addEventListener("offline", this.offlineEventListener, !1))), this.open() } createTransport(e) { const t = Object.assign({}, this.opts.query); t.EIO = me, t.transport = e, this.id && (t.sid = this.id); const s = Object.assign({}, this.opts.transportOptions[e], this.opts, { query: t, socket: this, hostname: this.hostname, secure: this.secure, port: this.port }); return new Rt[e](s) } open() { let e; if (this.opts.rememberUpgrade && A.priorWebsocketSuccess && this.transports.indexOf("websocket") !== -1) e = "websocket"; else if (this.transports.length === 0) { this.setTimeoutFn(() => { this.emitReserved("error", "No transports available") }, 0); return } else e = this.transports[0]; this.readyState = "opening"; try { e = this.createTransport(e) } catch { this.transports.shift(), this.open(); return } e.open(), this.setTransport(e) } setTransport(e) { this.transport && this.transport.removeAllListeners(), this.transport = e, e.on("drain", this.onDrain.bind(this)).on("packet", this.onPacket.bind(this)).on("error", this.onError.bind(this)).on("close", t => this.onClose("transport close", t)) } probe(e) { let t = this.createTransport(e), s = !1; A.priorWebsocketSuccess = !1; const i = () => { s || (t.send([{ type: "ping", data: "probe" }]), t.once("packet", R => { if (!s) if (R.type === "pong" && R.data === "probe") { if (this.upgrading = !0, this.emitReserved("upgrading", t), !t) return; A.priorWebsocketSuccess = t.name === "websocket", this.transport.pause(() => { s || this.readyState !== "closed" && (v(), this.setTransport(t), t.send([{ type: "upgrade" }]), this.emitReserved("upgrade", t), t = null, this.upgrading = !1, this.flush()) }) } else { const N = new Error("probe error"); N.transport = t.name, this.emitReserved("upgradeError", N) } })) }; function r() { s || (s = !0, v(), t.close(), t = null) } const o = R => { const N = new Error("probe error: " + R); N.transport = t.name, r(), this.emitReserved("upgradeError", N) }; function a() { o("transport closed") } function h() { o("socket closed") } function f(R) { t && R.name !== t.name && r() } const v = () => { t.removeListener("open", i), t.removeListener("error", o), t.removeListener("close", a), this.off("close", h), this.off("upgrading", f) }; t.once("open", i), t.once("error", o), t.once("close", a), this.once("close", h), this.once("upgrading", f), t.open() } onOpen() { if (this.readyState = "open", A.priorWebsocketSuccess = this.transport.name === "websocket", this.emitReserved("open"), this.flush(), this.readyState === "open" && this.opts.upgrade && this.transport.pause) { let e = 0; const t = this.upgrades.length; for (; e < t; e++)this.probe(this.upgrades[e]) } } onPacket(e) { if (this.readyState === "opening" || this.readyState === "open" || this.readyState === "closing") switch (this.emitReserved("packet", e), this.emitReserved("heartbeat"), e.type) { case "open": this.onHandshake(JSON.parse(e.data)); break; case "ping": this.resetPingTimeout(), this.sendPacket("pong"), this.emitReserved("ping"), this.emitReserved("pong"); break; case "error": const t = new Error("server error"); t.code = e.data, this.onError(t); break; case "message": this.emitReserved("data", e.data), this.emitReserved("message", e.data); break } } onHandshake(e) { this.emitReserved("handshake", e), this.id = e.sid, this.transport.query.sid = e.sid, this.upgrades = this.filterUpgrades(e.upgrades), this.pingInterval = e.pingInterval, this.pingTimeout = e.pingTimeout, this.maxPayload = e.maxPayload, this.onOpen(), this.readyState !== "closed" && this.resetPingTimeout() } resetPingTimeout() { this.clearTimeoutFn(this.pingTimeoutTimer), this.pingTimeoutTimer = this.setTimeoutFn(() => { this.onClose("ping timeout") }, this.pingInterval + this.pingTimeout), this.opts.autoUnref && this.pingTimeoutTimer.unref() } onDrain() { this.writeBuffer.splice(0, this.prevBufferLen), this.prevBufferLen = 0, this.writeBuffer.length === 0 ? this.emitReserved("drain") : this.flush() } flush() { if (this.readyState !== "closed" && this.transport.writable && !this.upgrading && this.writeBuffer.length) { const e = this.getWritablePackets(); this.transport.send(e), this.prevBufferLen = e.length, this.emitReserved("flush") } } getWritablePackets() { if (!(this.maxPayload && this.transport.name === "polling" && this.writeBuffer.length > 1)) return this.writeBuffer; let t = 1; for (let s = 0; s < this.writeBuffer.length; s++) { const i = this.writeBuffer[s].data; if (i && (t += gt(i)), s > 0 && t > this.maxPayload) return this.writeBuffer.slice(0, s); t += 2 } return this.writeBuffer } write(e, t, s) { return this.sendPacket("message", e, t, s), this } send(e, t, s) { return this.sendPacket("message", e, t, s), this } sendPacket(e, t, s, i) { if (typeof t == "function" && (i = t, t = void 0), typeof s == "function" && (i = s, s = null), this.readyState === "closing" || this.readyState === "closed") return; s = s || {}, s.compress = s.compress !== !1; const r = { type: e, data: t, options: s }; this.emitReserved("packetCreate", r), this.writeBuffer.push(r), i && this.once("flush", i), this.flush() } close() { const e = () => { this.onClose("forced close"), this.transport.close() }, t = () => { this.off("upgrade", t), this.off("upgradeError", t), e() }, s = () => { this.once("upgrade", t), this.once("upgradeError", t) }; return (this.readyState === "opening" || this.readyState === "open") && (this.readyState = "closing", this.writeBuffer.length ? this.once("drain", () => { this.upgrading ? s() : e() }) : this.upgrading ? s() : e()), this } onError(e) { A.priorWebsocketSuccess = !1, this.emitReserved("error", e), this.onClose("transport error", e) } onClose(e, t) { (this.readyState === "opening" || this.readyState === "open" || this.readyState === "closing") && (this.clearTimeoutFn(this.pingTimeoutTimer), this.transport.removeAllListeners("close"), this.transport.close(), this.transport.removeAllListeners(), typeof removeEventListener == "function" && removeEventListener("offline", this.offlineEventListener, !1), this.readyState = "closed", this.id = null, this.emitReserved("close", e, t), this.writeBuffer = [], this.prevBufferLen = 0) } filterUpgrades(e) { const t = []; let s = 0; const i = e.length; for (; s < i; s++)~this.transports.indexOf(e[s]) && t.push(e[s]); return t } } A.protocol = me; function Bt(n, e = "", t) { let s = n; t = t || typeof location < "u" && location, n == null && (n = t.protocol + "//" + t.host), typeof n == "string" && (n.charAt(0) === "/" && (n.charAt(1) === "/" ? n = t.protocol + n : n = t.host + n), /^(https?|wss?):\/\//.test(n) || (typeof t < "u" ? n = t.protocol + "//" + n : n = "https://" + n), s = X(n)), s.port || (/^(http|ws)$/.test(s.protocol) ? s.port = "80" : /^(http|ws)s$/.test(s.protocol) && (s.port = "443")), s.path = s.path || "/"; const r = s.host.indexOf(":") !== -1 ? "[" + s.host + "]" : s.host; return s.id = s.protocol + "://" + r + ":" + s.port + e, s.href = s.protocol + "://" + r + (t && t.port === s.port ? "" : ":" + s.port), s } const Vt = typeof ArrayBuffer == "function", Dt = n => typeof ArrayBuffer.isView == "function" ? ArrayBuffer.isView(n) : n.buffer instanceof ArrayBuffer, Re = Object.prototype.toString, Mt = typeof Blob == "function" || typeof Blob < "u" && Re.call(Blob) === "[object BlobConstructor]", Pt = typeof File == "function" || typeof File < "u" && Re.call(File) === "[object FileConstructor]"; function G(n) { return Vt && (n instanceof ArrayBuffer || Dt(n)) || Mt && n instanceof Blob || Pt && n instanceof File } function Y(n, e) { if (!n || typeof n != "object") return !1; if (Array.isArray(n)) { for (let t = 0, s = n.length; t < s; t++)if (Y(n[t])) return !0; return !1 } if (G(n)) return !0; if (n.toJSON && typeof n.toJSON == "function" && arguments.length === 1) return Y(n.toJSON(), !0); for (const t in n) if (Object.prototype.hasOwnProperty.call(n, t) && Y(n[t])) return !0; return !1 } function $t(n) { const e = [], t = n.data, s = n; return s.data = Q(t, e), s.attachments = e.length, { packet: s, buffers: e } } function Q(n, e) { if (!n) return n; if (G(n)) { const t = { _placeholder: !0, num: e.length }; return e.push(n), t } else if (Array.isArray(n)) { const t = new Array(n.length); for (let s = 0; s < n.length; s++)t[s] = Q(n[s], e); return t } else if (typeof n == "object" && !(n instanceof Date)) { const t = {}; for (const s in n) Object.prototype.hasOwnProperty.call(n, s) && (t[s] = Q(n[s], e)); return t } return n } function qt(n, e) { return n.data = ee(n.data, e), n.attachments = void 0, n } function ee(n, e) { if (!n) return n; if (n && n._placeholder === !0) { if (typeof n.num == "number" && n.num >= 0 && n.num < e.length) return e[n.num]; throw new Error("illegal attachments") } else if (Array.isArray(n)) for (let t = 0; t < n.length; t++)n[t] = ee(n[t], e); else if (typeof n == "object") for (const t in n) Object.prototype.hasOwnProperty.call(n, t) && (n[t] = ee(n[t], e)); return n } const Ht = 5; var l; (function (n) { n[n.CONNECT = 0] = "CONNECT", n[n.DISCONNECT = 1] = "DISCONNECT", n[n.EVENT = 2] = "EVENT", n[n.ACK = 3] = "ACK", n[n.CONNECT_ERROR = 4] = "CONNECT_ERROR", n[n.BINARY_EVENT = 5] = "BINARY_EVENT", n[n.BINARY_ACK = 6] = "BINARY_ACK" })(l || (l = {})); class Ut { constructor(e) { this.replacer = e } encode(e) { return (e.type === l.EVENT || e.type === l.ACK) && Y(e) ? (e.type = e.type === l.EVENT ? l.BINARY_EVENT : l.BINARY_ACK, this.encodeAsBinary(e)) : [this.encodeAsString(e)] } encodeAsString(e) { let t = "" + e.type; return (e.type === l.BINARY_EVENT || e.type === l.BINARY_ACK) && (t += e.attachments + "-"), e.nsp && e.nsp !== "/" && (t += e.nsp + ","), e.id != null && (t += e.id), e.data != null && (t += JSON.stringify(e.data, this.replacer)), t } encodeAsBinary(e) { const t = $t(e), s = this.encodeAsString(t.packet), i = t.buffers; return i.unshift(s), i } } class te extends d { constructor(e) { super(), this.reviver = e } add(e) { let t; if (typeof e == "string") { if (this.reconstructor) throw new Error("got plaintext data when reconstructing a packet"); t = this.decodeString(e), t.type === l.BINARY_EVENT || t.type === l.BINARY_ACK ? (this.reconstructor = new zt(t), t.attachments === 0 && super.emitReserved("decoded", t)) : super.emitReserved("decoded", t) } else if (G(e) || e.base64) if (this.reconstructor) t = this.reconstructor.takeBinaryData(e), t && (this.reconstructor = null, super.emitReserved("decoded", t)); else throw new Error("got binary data when not reconstructing a packet"); else throw new Error("Unknown type: " + e) } decodeString(e) { let t = 0; const s = { type: Number(e.charAt(0)) }; if (l[s.type] === void 0) throw new Error("unknown packet type " + s.type); if (s.type === l.BINARY_EVENT || s.type === l.BINARY_ACK) { const r = t + 1; for (; e.charAt(++t) !== "-" && t != e.length;); const o = e.substring(r, t); if (o != Number(o) || e.charAt(t) !== "-") throw new Error("Illegal attachments"); s.attachments = Number(o) } if (e.charAt(t + 1) === "/") { const r = t + 1; for (; ++t && !(e.charAt(t) === "," || t === e.length);); s.nsp = e.substring(r, t) } else s.nsp = "/"; const i = e.charAt(t + 1); if (i !== "" && Number(i) == i) { const r = t + 1; for (; ++t;) { const o = e.charAt(t); if (o == null || Number(o) != o) { --t; break } if (t === e.length) break } s.id = Number(e.substring(r, t + 1)) } if (e.charAt(++t)) { const r = this.tryParse(e.substr(t)); if (te.isPayloadValid(s.type, r)) s.data = r; else throw new Error("invalid payload") } return s } tryParse(e) { try { return JSON.parse(e, this.reviver) } catch { return !1 } } static isPayloadValid(e, t) { switch (e) { case l.CONNECT: return typeof t == "object"; case l.DISCONNECT: return t === void 0; case l.CONNECT_ERROR: return typeof t == "string" || typeof t == "object"; case l.EVENT: case l.BINARY_EVENT: return Array.isArray(t) && t.length > 0; case l.ACK: case l.BINARY_ACK: return Array.isArray(t) } } destroy() { this.reconstructor && this.reconstructor.finishedReconstruction() } } class zt { constructor(e) { this.packet = e, this.buffers = [], this.reconPack = e } takeBinaryData(e) { if (this.buffers.push(e), this.buffers.length === this.reconPack.attachments) { const t = qt(this.reconPack, this.buffers); return this.finishedReconstruction(), t } return null } finishedReconstruction() { this.reconPack = null, this.buffers = [] } } var Ft = Object.freeze({ __proto__: null, protocol: Ht, get PacketType() { return l }, Encoder: Ut, Decoder: te }); function b(n, e, t) { return n.on(e, t), function () { n.off(e, t) } } const Yt = Object.freeze({ connect: 1, connect_error: 1, disconnect: 1, disconnecting: 1, newListener: 1, removeListener: 1 }); class Se extends d { constructor(e, t, s) { super(), this.connected = !1, this.receiveBuffer = [], this.sendBuffer = [], this.ids = 0, this.acks = {}, this.flags = {}, this.io = e, this.nsp = t, s && s.auth && (this.auth = s.auth), this.io._autoConnect && this.open() } get disconnected() { return !this.connected } subEvents() { if (this.subs) return; const e = this.io; this.subs = [b(e, "open", this.onopen.bind(this)), b(e, "packet", this.onpacket.bind(this)), b(e, "error", this.onerror.bind(this)), b(e, "close", this.onclose.bind(this))] } get active() { return !!this.subs } connect() { return this.connected ? this : (this.subEvents(), this.io._reconnecting || this.io.open(), this.io._readyState === "open" && this.onopen(), this) } open() { return this.connect() } send(...e) { return e.unshift("message"), this.emit.apply(this, e), this } emit(e, ...t) { if (Yt.hasOwnProperty(e)) throw new Error('"' + e.toString() + '" is a reserved event name'); t.unshift(e); const s = { type: l.EVENT, data: t }; if (s.options = {}, s.options.compress = this.flags.compress !== !1, typeof t[t.length - 1] == "function") { const o = this.ids++, a = t.pop(); this._registerAckCallback(o, a), s.id = o } const i = this.io.engine && this.io.engine.transport && this.io.engine.transport.writable; return this.flags.volatile && (!i || !this.connected) || (this.connected ? (this.notifyOutgoingListeners(s), this.packet(s)) : this.sendBuffer.push(s)), this.flags = {}, this } _registerAckCallback(e, t) { const s = this.flags.timeout; if (s === void 0) { this.acks[e] = t; return } const i = this.io.setTimeoutFn(() => { delete this.acks[e]; for (let r = 0; r < this.sendBuffer.length; r++)this.sendBuffer[r].id === e && this.sendBuffer.splice(r, 1); t.call(this, new Error("operation has timed out")) }, s); this.acks[e] = (...r) => { this.io.clearTimeoutFn(i), t.apply(this, [null, ...r]) } } packet(e) { e.nsp = this.nsp, this.io._packet(e) } onopen() { typeof this.auth == "function" ? this.auth(e => { this.packet({ type: l.CONNECT, data: e }) }) : this.packet({ type: l.CONNECT, data: this.auth }) } onerror(e) { this.connected || this.emitReserved("connect_error", e) } onclose(e, t) { this.connected = !1, delete this.id, this.emitReserved("disconnect", e, t) } onpacket(e) { if (e.nsp === this.nsp) switch (e.type) { case l.CONNECT: if (e.data && e.data.sid) { const i = e.data.sid; this.onconnect(i) } else this.emitReserved("connect_error", new Error("It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)")); break; case l.EVENT: case l.BINARY_EVENT: this.onevent(e); break; case l.ACK: case l.BINARY_ACK: this.onack(e); break; case l.DISCONNECT: this.ondisconnect(); break; case l.CONNECT_ERROR: this.destroy(); const s = new Error(e.data.message); s.data = e.data.data, this.emitReserved("connect_error", s); break } } onevent(e) { const t = e.data || []; e.id != null && t.push(this.ack(e.id)), this.connected ? this.emitEvent(t) : this.receiveBuffer.push(Object.freeze(t)) } emitEvent(e) { if (this._anyListeners && this._anyListeners.length) { const t = this._anyListeners.slice(); for (const s of t) s.apply(this, e) } super.emit.apply(this, e) } ack(e) { const t = this; let s = !1; return function (...i) { s || (s = !0, t.packet({ type: l.ACK, id: e, data: i })) } } onack(e) { const t = this.acks[e.id]; typeof t == "function" && (t.apply(this, e.data), delete this.acks[e.id]) } onconnect(e) { this.id = e, this.connected = !0, this.emitBuffered(), this.emitReserved("connect") } emitBuffered() { this.receiveBuffer.forEach(e => this.emitEvent(e)), this.receiveBuffer = [], this.sendBuffer.forEach(e => { this.notifyOutgoingListeners(e), this.packet(e) }), this.sendBuffer = [] } ondisconnect() { this.destroy(), this.onclose("io server disconnect") } destroy() { this.subs && (this.subs.forEach(e => e()), this.subs = void 0), this.io._destroy(this) } disconnect() { return this.connected && this.packet({ type: l.DISCONNECT }), this.destroy(), this.connected && this.onclose("io client disconnect"), this } close() { return this.disconnect() } compress(e) { return this.flags.compress = e, this } get volatile() { return this.flags.volatile = !0, this } timeout(e) { return this.flags.timeout = e, this } onAny(e) { return this._anyListeners = this._anyListeners || [], this._anyListeners.push(e), this } prependAny(e) { return this._anyListeners = this._anyListeners || [], this._anyListeners.unshift(e), this } offAny(e) { if (!this._anyListeners) return this; if (e) { const t = this._anyListeners; for (let s = 0; s < t.length; s++)if (e === t[s]) return t.splice(s, 1), this } else this._anyListeners = []; return this } listenersAny() { return this._anyListeners || [] } onAnyOutgoing(e) { return this._anyOutgoingListeners = this._anyOutgoingListeners || [], this._anyOutgoingListeners.push(e), this } prependAnyOutgoing(e) { return this._anyOutgoingListeners = this._anyOutgoingListeners || [], this._anyOutgoingListeners.unshift(e), this } offAnyOutgoing(e) { if (!this._anyOutgoingListeners) return this; if (e) { const t = this._anyOutgoingListeners; for (let s = 0; s < t.length; s++)if (e === t[s]) return t.splice(s, 1), this } else this._anyOutgoingListeners = []; return this } listenersAnyOutgoing() { return this._anyOutgoingListeners || [] } notifyOutgoingListeners(e) { if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) { const t = this._anyOutgoingListeners.slice(); for (const s of t) s.apply(this, e.data) } } } function S(n) { n = n || {}, this.ms = n.min || 100, this.max = n.max || 1e4, this.factor = n.factor || 2, this.jitter = n.jitter > 0 && n.jitter <= 1 ? n.jitter : 0, this.attempts = 0 } S.prototype.duration = function () { var n = this.ms * Math.pow(this.factor, this.attempts++); if (this.jitter) { var e = Math.random(), t = Math.floor(e * this.jitter * n); n = (Math.floor(e * 10) & 1) == 0 ? n - t : n + t } return Math.min(n, this.max) | 0 }, S.prototype.reset = function () { this.attempts = 0 }, S.prototype.setMin = function (n) { this.ms = n }, S.prototype.setMax = function (n) { this.max = n }, S.prototype.setJitter = function (n) { this.jitter = n }; class ne extends d { constructor(e, t) { var s; super(), this.nsps = {}, this.subs = [], e && typeof e == "object" && (t = e, e = void 0), t = t || {}, t.path = t.path || "/socket.io", this.opts = t, U(this, t), this.reconnection(t.reconnection !== !1), this.reconnectionAttempts(t.reconnectionAttempts || 1 / 0), this.reconnectionDelay(t.reconnectionDelay || 1e3), this.reconnectionDelayMax(t.reconnectionDelayMax || 5e3), this.randomizationFactor((s = t.randomizationFactor) !== null && s !== void 0 ? s : .5), this.backoff = new S({ min: this.reconnectionDelay(), max: this.reconnectionDelayMax(), jitter: this.randomizationFactor() }), this.timeout(t.timeout == null ? 2e4 : t.timeout), this._readyState = "closed", this.uri = e; const i = t.parser || Ft; this.encoder = new i.Encoder, this.decoder = new i.Decoder, this._autoConnect = t.autoConnect !== !1, this._autoConnect && this.open() } reconnection(e) { return arguments.length ? (this._reconnection = !!e, this) : this._reconnection } reconnectionAttempts(e) { return e === void 0 ? this._reconnectionAttempts : (this._reconnectionAttempts = e, this) } reconnectionDelay(e) { var t; return e === void 0 ? this._reconnectionDelay : (this._reconnectionDelay = e, (t = this.backoff) === null || t === void 0 || t.setMin(e), this) } randomizationFactor(e) { var t; return e === void 0 ? this._randomizationFactor : (this._randomizationFactor = e, (t = this.backoff) === null || t === void 0 || t.setJitter(e), this) } reconnectionDelayMax(e) { var t; return e === void 0 ? this._reconnectionDelayMax : (this._reconnectionDelayMax = e, (t = this.backoff) === null || t === void 0 || t.setMax(e), this) } timeout(e) { return arguments.length ? (this._timeout = e, this) : this._timeout } maybeReconnectOnOpen() { !this._reconnecting && this._reconnection && this.backoff.attempts === 0 && this.reconnect() } open(e) { if (~this._readyState.indexOf("open")) return this; this.engine = new A(this.uri, this.opts); const t = this.engine, s = this; this._readyState = "opening", this.skipReconnect = !1; const i = b(t, "open", function () { s.onopen(), e && e() }), r = b(t, "error", o => { s.cleanup(), s._readyState = "closed", this.emitReserved("error", o), e ? e(o) : s.maybeReconnectOnOpen() }); if (this._timeout !== !1) { const o = this._timeout; o === 0 && i(); const a = this.setTimeoutFn(() => { i(), t.close(), t.emit("error", new Error("timeout")) }, o); this.opts.autoUnref && a.unref(), this.subs.push(function () { clearTimeout(a) }) } return this.subs.push(i), this.subs.push(r), this } connect(e) { return this.open(e) } onopen() { this.cleanup(), this._readyState = "open", this.emitReserved("open"); const e = this.engine; this.subs.push(b(e, "ping", this.onping.bind(this)), b(e, "data", this.ondata.bind(this)), b(e, "error", this.onerror.bind(this)), b(e, "close", this.onclose.bind(this)), b(this.decoder, "decoded", this.ondecoded.bind(this))) } onping() { this.emitReserved("ping") } ondata(e) { try { this.decoder.add(e) } catch { this.onclose("parse error") } } ondecoded(e) { this.emitReserved("packet", e) } onerror(e) { this.emitReserved("error", e) } socket(e, t) { let s = this.nsps[e]; return s || (s = new Se(this, e, t), this.nsps[e] = s), s } _destroy(e) { const t = Object.keys(this.nsps); for (const s of t) if (this.nsps[s].active) return; this._close() } _packet(e) { const t = this.encoder.encode(e); for (let s = 0; s < t.length; s++)this.engine.write(t[s], e.options) } cleanup() { this.subs.forEach(e => e()), this.subs.length = 0, this.decoder.destroy() } _close() { this.skipReconnect = !0, this._reconnecting = !1, this.onclose("forced close"), this.engine && this.engine.close() } disconnect() { return this._close() } onclose(e, t) { this.cleanup(), this.backoff.reset(), this._readyState = "closed", this.emitReserved("close", e, t), this._reconnection && !this.skipReconnect && this.reconnect() } reconnect() { if (this._reconnecting || this.skipReconnect) return this; const e = this; if (this.backoff.attempts >= this._reconnectionAttempts) this.backoff.reset(), this.emitReserved("reconnect_failed"), this._reconnecting = !1; else { const t = this.backoff.duration(); this._reconnecting = !0; const s = this.setTimeoutFn(() => { e.skipReconnect || (this.emitReserved("reconnect_attempt", e.backoff.attempts), !e.skipReconnect && e.open(i => { i ? (e._reconnecting = !1, e.reconnect(), this.emitReserved("reconnect_error", i)) : e.onreconnect() })) }, t); this.opts.autoUnref && s.unref(), this.subs.push(function () { clearTimeout(s) }) } } onreconnect() { const e = this.backoff.attempts; this._reconnecting = !1, this.backoff.reset(), this.emitReserved("reconnect", e) } } const D = {}; function j(n, e) { typeof n == "object" && (e = n, n = void 0), e = e || {}; const t = Bt(n, e.path || "/socket.io"), s = t.source, i = t.id, r = t.path, o = D[i] && r in D[i].nsps, a = e.forceNew || e["force new connection"] || e.multiplex === !1 || o; let h; return a ? h = new ne(s, e) : (D[i] || (D[i] = new ne(s, e)), h = D[i]), t.query && !e.query && (e.query = t.queryKey), h.socket(t.path, e) } Object.assign(j, { Manager: ne, Socket: Se, io: j, connect: j }); const { PermissionStore: Le, VoiceStateStore: se, ChannelStore: ie, GuildStore: jt, UserStore: M, InviteActions: Zt, FluxDispatcher: Zn, Router: { transitionTo: Kt }, React: c, modals: { actions: { show: Wt }, ModalRoot: Jt } } = oe.default, { Permissions: Oe } = oe.default.constants, { selectVoiceChannel: Xt } = B.default.findByProps("selectVoiceChannel", "disconnect"); function Gt(n) { return Object.values(se.getAllVoiceStates()).map(e => Object.values(e)).flat().map(e => [e.userId, re(e.userId, n)]).filter(e => e[1]?.length) } function Ie(n) { let e = se.getVoiceStatesForChannel(n); return e ? Object.keys(e).map(t => Z(re(t))).filter(t => t?.id) : [] } function re(n, e) { return Object.values(se.__getLocalVars().users[n] || {}).map(t => e ? Be(t).join(";") : Be(t)) } function Be(n) { let e = p.persist.ghost.settings?.redacted ?? !1, t = ie.getChannel(n.channelId), s = jt.getGuild(t?.guild_id), i = M.getUser(n.userId); return [n.selfDeaf || n.deaf ? `${n.deaf ? "guildDeaf" : "deaf"}` : n.selfMute || n.mute || n.suppress ? `${n.mute ? "guildMute" : "mute"}` : n.selfVideo ? "video" : n.selfStream ? "stream" : "normal", i.id, i.tag, i.avatar || "", n.channelId || "", t ? e ? "Unknown" : t.name || [...new Map([...t.recipients.map(r => [r, M.getUser(r)]), [M.getCurrentUser().id, M.getCurrentUser()]]).values()].filter(r => r).map(r => r.username).sort((r, o) => r > o).join(", ") || "Unknown" : "", t ? e ? "" : t?.icon || "" : "", t && e || "", s ? s.id : "", s ? s.name : "", s && s?.vanityURLCode || "", s && s?.icon || ""].map(r => `${r}`.replaceAll(";", "")) } function Z(n) { return typeof n == "string" && (n = n.split(";")), { state: n[0], userId: n[1], userTag: n[2], userAvatar: n[3], channelId: n[4], channelName: n[5], channelIcon: n[6], channelRedacted: n[7] == "true", guildId: n[8], guildName: n[9], guildVanity: n[10], guildIcon: n[11] } } const E = j("https://plugin-socket.acord.app/voice-indicators", { transports: ["websocket"] }); E.on("connect", () => { E.emit(":setUser", { userId: M.getCurrentUser().id }) }), E.on(":kill", () => { E.disconnect() }), E.on("state", ({ userId: n }, e) => { e({ ok: !0, data: re(n) }) }), E.on("members", ({ channelId: n }, e) => { e({ ok: !0, data: Ie(n) }) }); function Ve(n, e, t = 1 / 0) { return new Promise(s => { let i = !1; E.emit(n, e, r => { i || s(r) }), t != 1 / 0 && setTimeout(() => { i = !0, s({ ok: !1, error: "Timeout" }) }, t) }) } class Qt { constructor() { this.patches = [] } add(...e) { this.patches.push(...e) } remove(e) { let [t] = this.patches.splice(this.patches.indexOf(s => s == e), 1); t() } removeAll() { let e = this.patches.splice(0, this.patches.length); for (let t = 0; t < e.length; t++)e[t]() } } var k = new Qt; function en() { k.add((() => { let n = setInterval(() => { K.default.emit("VoiceIndicators:Render") }, 1e3); return () => { clearInterval(n) } })()) } function De({ color: n }) {
    return `
    <svg
        width="24"
        height="24"
        viewBox="0 0 24 24"
        fill="none"
        class="vi--icon vi--deaf-icon"
        style="color: ${n};"
      >
      <path d="M6.16204 15.0065C6.10859 15.0022 6.05455 15 6 15H4V12C4 7.588 7.589 4 12 4C13.4809 4 14.8691 4.40439 16.0599 5.10859L17.5102 3.65835C15.9292 2.61064 14.0346 2 12 2C6.486 2 2 6.485 2 12V19.1685L6.16204 15.0065Z" fill="currentColor"></path>
      <path d="M19.725 9.91686C19.9043 10.5813 20 11.2796 20 12V15H18C16.896 15 16 15.896 16 17V20C16 21.104 16.896 22 18 22H20C21.105 22 22 21.104 22 20V12C22 10.7075 21.7536 9.47149 21.3053 8.33658L19.725 9.91686Z" fill="currentColor"></path>
      <path d="M3.20101 23.6243L1.7868 22.2101L21.5858 2.41113L23 3.82535L3.20101 23.6243Z" fill="currentColor"></path>
    </svg>
  `} function Me({ color: n }) {
    return `
    <svg
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      class="vi--icon vi--mute-icon"
      style="color: ${n};"
    >
      <path d="M6.7 11H5C5 12.19 5.34 13.3 5.9 14.28L7.13 13.05C6.86 12.43 6.7 11.74 6.7 11Z" fill="currentColor"></path>
      <path d="M9.01 11.085C9.015 11.1125 9.02 11.14 9.02 11.17L15 5.18V5C15 3.34 13.66 2 12 2C10.34 2 9 3.34 9 5V11C9 11.03 9.005 11.0575 9.01 11.085Z" fill="currentColor"></path>
      <path d="M11.7237 16.0927L10.9632 16.8531L10.2533 17.5688C10.4978 17.633 10.747 17.6839 11 17.72V22H13V17.72C16.28 17.23 19 14.41 19 11H17.3C17.3 14 14.76 16.1 12 16.1C11.9076 16.1 11.8155 16.0975 11.7237 16.0927Z" fill="currentColor"></path>
      <path d="M21 4.27L19.73 3L3 19.73L4.27 21L8.46 16.82L9.69 15.58L11.35 13.92L14.99 10.28L21 4.27Z" fill="currentColor"></path>
    </svg>
  `} function tn({ color: n }) {
    return `
    <svg
        width="24"
        height="24"
        viewBox="0 0 24 24"
        fill="none"
        class="vi--icon vi--video-icon"
        style="color: ${n};"
      >
        <path d="M21.526 8.149C21.231 7.966 20.862 7.951 20.553 8.105L18 9.382V7C18 5.897 17.103 5 16 5H4C2.897 5 2 5.897 2 7V17C2 18.104 2.897 19 4 19H16C17.103 19 18 18.104 18 17V14.618L20.553 15.894C20.694 15.965 20.847 16 21 16C21.183 16 21.365 15.949 21.526 15.851C21.82 15.668 22 15.347 22 15V9C22 8.653 21.82 8.332 21.526 8.149Z" fill="currentColor"></path>
      </svg>
  `} function nn({ color: n }) {
    return `
    <svg
      width="60"
      height="61"
      viewBox="0 0 60 61"
      fill="none"
      class="vi--icon vi--voice-icon"
      style="color: ${n};"
    >
      <path d="M28.4623 8.15497C27.5273 7.77127 26.4523 7.98305 25.7373 8.69565L15.0048 20.4212H7.50479C6.12979 20.4212 5.00479 21.5449 5.00479 22.9128V37.8623C5.00479 39.2327 6.12979 40.354 7.50479 40.354H15.0048L25.7373 52.0844C26.4523 52.7971 27.5273 53.0113 28.4623 52.6251C29.3973 52.2389 30.0048 51.3295 30.0048 50.3204V10.4547C30.0048 9.45061 29.3973 8.53619 28.4623 8.15497ZM35.0048 12.9461V17.9293C41.8973 17.9293 47.5048 23.5205 47.5048 30.3875C47.5048 37.2569 41.8973 42.8456 35.0048 42.8456V47.8288C44.6548 47.8288 52.5048 40.0076 52.5048 30.3875C52.5048 20.7723 44.6548 12.9461 35.0048 12.9461ZM35.0048 22.9126C39.1398 22.9126 42.5048 26.2689 42.5048 30.3875C42.5048 34.5111 39.1398 37.8623 35.0048 37.8623V32.8791C36.3823 32.8791 37.5048 31.7604 37.5048 30.3875C37.5048 29.0146 36.3823 27.8959 35.0048 27.8959V22.9126Z" fill="currentColor"></path>
    </svg>
  `} const m = { DANGER: "#eb3d47", SECONDARY: "#8a8e93", SUCCESS: "#3aa360", PRIMARY: "#5865f2" }; let sn = { guildDeaf: De({ color: m.DANGER }), deaf: De({ color: m.SECONDARY }), guildMute: Me({ color: m.DANGER }), mute: Me({ color: m.SECONDARY }), video: tn({ color: m.SECONDARY }), stream: '<div class="v--icon vi--red-dot" ></div>', normal: nn({ color: m.SECONDARY }) }; function rn(n, e = !1) { let t = e ? n : n.state; return sn[t] || t } const y = { lastVoiceStates: [], responseCache: new Map, stateRequestCache: [] }; async function on(n) { let e = y.responseCache.get(`Users:${n}`); if (e) return e.states; let t = await new Promise(s => y.stateRequestCache.push([n, s])); return y.responseCache.set(`Users:${n}`, { at: Date.now(), states: t, ttl: 1e3 }), t } async function an(n) { let e = Ie(n); if (!e.length) { let t = y.responseCache.get(`VoiceMembers:${n}`); if (t) return t.members; e = ((await Ve("members", { id: n }))?.data || []).map(Z), y.responseCache.set(`VoiceMembers:${n}`, { at: Date.now(), members: e, ttl: 1e3 }) } return e } function Pe(n = {}) { return u.createElement("svg", { width: "24", height: "24", viewBox: "0 0 24 24", fill: "none", className: "vi--icon vi--arrow-icon", style: { color: n.color } }, u.createElement("polygon", { fill: "currentColor", "fill-rule": "nonzero", points: "13 20 11 20 11 8 5.5 13.5 4.08 12.08 12 4.16 19.92 12.08 18.5 13.5 13 8" })) } function cn(n = {}) { return u.createElement("svg", { width: "24", height: "24", viewBox: "0 0 24 24", fill: "none", className: "vi--icon vi--close-icon", style: { color: n.color } }, u.createElement("path", { d: "M12 10.586l4.95-4.95 1.414 1.414-4.95 4.95 4.95 4.95-1.414 1.414-4.95-4.95-4.95 4.95-1.414-1.414 4.95-4.95-4.95-4.95L7.05 5.636z", fill: "currentColor" })) } function $e(n = {}) { return u.createElement("svg", { width: "24", height: "24", viewBox: "0 0 24 24", fill: "none", className: "vi--icon vi--deaf-icon", style: { color: n.color } }, u.createElement("path", { d: "M6.16204 15.0065C6.10859 15.0022 6.05455 15 6 15H4V12C4 7.588 7.589 4 12 4C13.4809 4 14.8691 4.40439 16.0599 5.10859L17.5102 3.65835C15.9292 2.61064 14.0346 2 12 2C6.486 2 2 6.485 2 12V19.1685L6.16204 15.0065Z", fill: "currentColor" }), u.createElement("path", { d: "M19.725 9.91686C19.9043 10.5813 20 11.2796 20 12V15H18C16.896 15 16 15.896 16 17V20C16 21.104 16.896 22 18 22H20C21.105 22 22 21.104 22 20V12C22 10.7075 21.7536 9.47149 21.3053 8.33658L19.725 9.91686Z", fill: "currentColor" }), u.createElement("path", { d: "M3.20101 23.6243L1.7868 22.2101L21.5858 2.41113L23 3.82535L3.20101 23.6243Z", fill: "currentColor" })) } function ln(n = {}) { return u.createElement("svg", { width: "24", height: "24", viewBox: "0 0 24 24", fill: "none", className: "vi--icon vi--join-call-icon", style: { color: n.color } }, u.createElement("path", { fill: "currentColor", "fill-rule": "evenodd", "clip-rule": "evenodd", d: "M11 5V3C16.515 3 21 7.486 21 13H19C19 8.589 15.411 5 11 5ZM17 13H15C15 10.795 13.206 9 11 9V7C14.309 7 17 9.691 17 13ZM11 11V13H13C13 11.896 12.105 11 11 11ZM14 16H18C18.553 16 19 16.447 19 17V21C19 21.553 18.553 22 18 22H13C6.925 22 2 17.075 2 11V6C2 5.447 2.448 5 3 5H7C7.553 5 8 5.447 8 6V10C8 10.553 7.553 11 7 11H6C6.063 14.938 9 18 13 18V17C13 16.447 13.447 16 14 16Z" })) } function qe(n = {}) { return u.createElement("svg", { width: "24", height: "24", viewBox: "0 0 24 24", fill: "none", className: "vi--icon vi--mute-icon", style: { color: n.color } }, u.createElement("path", { d: "M6.7 11H5C5 12.19 5.34 13.3 5.9 14.28L7.13 13.05C6.86 12.43 6.7 11.74 6.7 11Z", fill: "currentColor" }), u.createElement("path", { d: "M9.01 11.085C9.015 11.1125 9.02 11.14 9.02 11.17L15 5.18V5C15 3.34 13.66 2 12 2C10.34 2 9 3.34 9 5V11C9 11.03 9.005 11.0575 9.01 11.085Z", fill: "currentColor" }), u.createElement("path", { d: "M11.7237 16.0927L10.9632 16.8531L10.2533 17.5688C10.4978 17.633 10.747 17.6839 11 17.72V22H13V17.72C16.28 17.23 19 14.41 19 11H17.3C17.3 14 14.76 16.1 12 16.1C11.9076 16.1 11.8155 16.0975 11.7237 16.0927Z", fill: "currentColor" }), u.createElement("path", { d: "M21 4.27L19.73 3L3 19.73L4.27 21L8.46 16.82L9.69 15.58L11.35 13.92L14.99 10.28L21 4.27Z", fill: "currentColor" })) } function hn(n = {}) { return u.createElement("svg", { width: "24", height: "24", viewBox: "0 0 24 24", fill: "none", className: "vi--icon vi--video-icon", style: { color: n.color } }, u.createElement("path", { d: "M21.526 8.149C21.231 7.966 20.862 7.951 20.553 8.105L18 9.382V7C18 5.897 17.103 5 16 5H4C2.897 5 2 5.897 2 7V17C2 18.104 2.897 19 4 19H16C17.103 19 18 18.104 18 17V14.618L20.553 15.894C20.694 15.965 20.847 16 21 16C21.183 16 21.365 15.949 21.526 15.851C21.82 15.668 22 15.347 22 15V9C22 8.653 21.82 8.332 21.526 8.149Z", fill: "currentColor" })) } function He(n = {}) { return u.createElement("svg", { width: "60", height: "61", viewBox: "0 0 60 61", fill: "none", className: "vi--icon vi--voice-icon", style: { color: n.color } }, u.createElement("path", { d: "M28.4623 8.15497C27.5273 7.77127 26.4523 7.98305 25.7373 8.69565L15.0048 20.4212H7.50479C6.12979 20.4212 5.00479 21.5449 5.00479 22.9128V37.8623C5.00479 39.2327 6.12979 40.354 7.50479 40.354H15.0048L25.7373 52.0844C26.4523 52.7971 27.5273 53.0113 28.4623 52.6251C29.3973 52.2389 30.0048 51.3295 30.0048 50.3204V10.4547C30.0048 9.45061 29.3973 8.53619 28.4623 8.15497ZM35.0048 12.9461V17.9293C41.8973 17.9293 47.5048 23.5205 47.5048 30.3875C47.5048 37.2569 41.8973 42.8456 35.0048 42.8456V47.8288C44.6548 47.8288 52.5048 40.0076 52.5048 30.3875C52.5048 20.7723 44.6548 12.9461 35.0048 12.9461ZM35.0048 22.9126C39.1398 22.9126 42.5048 26.2689 42.5048 30.3875C42.5048 34.5111 39.1398 37.8623 35.0048 37.8623V32.8791C36.3823 32.8791 37.5048 31.7604 37.5048 30.3875C37.5048 29.0146 36.3823 27.8959 35.0048 27.8959V22.9126Z", fill: "currentColor" })) } const Ue = B.default.findByProps("thin", "scrollerBase"), un = { guildDeaf: $e({ color: m.DANGER }), deaf: $e({ color: m.SECONDARY }), guildMute: qe({ color: m.DANGER }), mute: qe({ color: m.SECONDARY }), video: hn({ color: m.SECONDARY }), stream: c.createElement("div", { class: "v--icon vi--red-dot" }), normal: He({ color: m.SECONDARY }) }; function dn({ e: n, states: e }) { const [t, s] = c.useState({ inMyChannels: !1, isJoinable: !1, state: e[0] }), [i, r] = c.useState([]); async function o(a) { let h = ie.getChannel(a.channelId), f = !!h, v = f ? h.type == 3 ? !0 : Le.can(Oe.CONNECT, h) && Le.can(Oe.VIEW_CHANNEL, h) : !1; s({ inMyChannels: f, isJoinable: v, state: a }), r(a.channelRedacted ? [] : await an(a.channelId)) } return c.useEffect(() => { o(e[0]) }, []), c.createElement(Jt, { transitionState: n.transitionState, size: "large", className: "vi--modal-root" }, c.createElement("div", { className: "vi--modal-header" }, c.createElement("div", { className: "title" }, p.i18n.format("VOICE_STATES")), c.createElement("div", { onClick: n.onClose, className: "vi--modal-close" }, c.createElement(cn, { color: m.SECONDARY }))), c.createElement("div", { className: "vi--modal-content" }, c.createElement("div", { className: `tabs ${Ue.thin}` }, e.map(a => c.createElement("div", { className: `item ${a.channelId === t.state.channelId ? "active" : ""}`, onClick: () => { o(a) } }, c.createElement("div", { className: "content" }, c.createElement("div", { className: "icon", style: { backgroundImage: a.guildId ? `url('https://cdn.discordapp.com/icons/${a.guildId}/${a.guildIcon}.png?size=128')` : a.channelId ? `url('https://cdn.discordapp.com/channel-icons/${a.channelId}/${a.channelIcon}.png?size=128')` : null } }), c.createElement("div", { className: "name", "acord--tooltip-content": a.guildName || p.i18n.format("PRIVATE_CALL") }, a.guildId ? a.guildName : p.i18n.format("PRIVATE_CALL")), a.guildVanity ? c.createElement("div", { className: "vanity", onClick: h => { h.preventDefault(), a.guildVanity && (Zt.acceptInviteAndTransitionToInviteChannel({ inviteKey: a.guildVanity }), n.onClose()) } }, c.createElement("div", { "acord--tooltip-content": p.i18n.format("JOIN_GUILD") }, c.createElement(Pe, { color: m.PRIMARY }))) : null)))), c.createElement("div", { className: "content" }, c.createElement("div", { className: "channel" }, c.createElement("div", { className: "name-container" }, c.createElement("div", { className: "name" }, c.createElement(He, null), t.state.channelName || p.i18n.format("UNKNOWN")), c.createElement("div", { className: "controls" }, c.createElement("div", { className: `control ${t.isJoinable ? "" : "vi--cant-click vi--cant-join"}`, onClick: a => { a.preventDefault(), t.isJoinable && (W.default.show(p.i18n.format("X_JOIN_CHANNEL", t.state.channelName)), Xt(t.state.channelId), n.onClose()) } }, c.createElement("div", { "acord--tooltip-content": p.i18n.format(`${t.isJoinable ? "" : "CANT_"}JOIN`) }, c.createElement(ln, { color: m.SECONDARY }))), c.createElement("div", { className: `control ${t.inMyChannels ? "" : "vi--cant-click"}`, onClick: a => { a.preventDefault(), t.inMyChannels && (W.default.show(p.i18n.format("X_VIEW_CHANNEL", t.state.channelName)), Kt(`/channels/${t.state.guildId || "@me"}/${t.state.channelId}`), n.onClose()) } }, c.createElement("div", { "acord--tooltip-content": p.i18n.format(`${t.inMyChannels ? "" : "CANT_"}VIEW`) }, c.createElement(Pe, { color: m.SECONDARY }))))), c.createElement("div", { className: "members-container" }, c.createElement("div", { className: `members ${Ue.thin}` }, i.map(a => c.createElement("div", { className: "member", onClick: async h => { h.preventDefault(); try { if (!ce.default.show.user) throw Error("Old Acord version"); await ce.default.show.user(a.userId) } catch { q.default.copyText(a.userTag), W.default.show(p.i18n.format("X_COPIED", a.userTag)) } } }, c.createElement("div", { className: "avatar", style: { backgroundImage: `url("${a.userAvatar ? `https://cdn.discordapp.com/avatars/${a.userId}/${a.userAvatar}.png?size=128` : `https://cdn.discordapp.com/embed/avatars/${Number(a.userTag.split("#")[1]) % 5}.png`}")` } }), c.createElement("div", { className: "about" }, c.createElement("div", { className: "name-container" }, c.createElement("div", { className: "name" }, a.userTag.split("#")[0]), c.createElement("div", { className: "discriminator" }, "#", a.userTag.split("#")[1])), c.createElement("div", { className: "state" }, un[a?.state] || null)))))))))) } async function fn(n) { Wt(e => u.createElement(dn, { e, states: n })) } const pn = [B.default.findByProps("bot", "nameTag").nameTag, B.default.findByProps("wrappedName", "nameAndDecorators").nameAndDecorators, B.default.findByProps("wrappedName", "nameAndDecorators", "selected").nameAndDecorators]; async function mn(n, e) { if (p.persist.ghost.settings.ignoreBots && n.bot) return; let t = ae.default.parseHTML('<span class="vi--patched vi--icon-container vi--hidden"></span>'); t.render = async () => { let i = await on(n.id); t.states = i; let r = i[0]; if (!r) { t.innerHTML = "", t.state = null, t.classList.add("vi--hidden"), t.setAttribute("acord--tooltip-content", ""); return } if (_.isEqual(r, t.state)) return; let o = Z(r), a = ie.getChannel(o.channelId); t.classList.remove("vi--hidden"), t.classList[a ? "remove" : "add"]("vi--cant-join"); let h = `(${i.length}) ${a ? "\u2705" : "\u274C"} ${o.guildId ? o.guildName || "Unknown Guild" : p.i18n.format("PRIVATE_CALL")} > ${o.channelName || "Plugin Deprecated"}`; t.setAttribute("acord--tooltip-content", h), t.replaceChildren(ae.default.parseHTML(rn(o))), t.state = r }; let s = K.default.on("VoiceIndicators:Render", t.render); t.unmount = () => { s() }, t.render(), t.addEventListener("click", i => { i.preventDefault(), i.stopPropagation(), !p.persist.ghost.settings?.redacted && fn(t.states.map(Z)) }), e.appendChild(t) } let L = {}; const yn = (n, e) => { Date.now() - (L[n.id] || 0) > 100 && (L[n.id] = Date.now(), mn(n, e)) }; function gn() { k.add((() => { let n = setInterval(() => { for (const e in L) Date.now() - L[e] > 1e3 && delete L[e] }, 1e4); return () => { L = {}, clearInterval(n) } })()), k.add(K.default.on("domMutation", n => { n.addedNodes.forEach(e => { e.nodeType !== Node.TEXT_NODE && e.querySelectorAll(pn.map(t => `.${t}`).join(", ")).forEach(async t => { if (t.querySelector(".vi--patched")) return; let s = q.default.react.getProps(t, i => !!i?.user)?.user; !s || yn(s, t) }) }), n.removedNodes.forEach(e => { if (e.nodeType === Node.TEXT_NODE) return; e.querySelectorAll(".vi--patched").forEach(async s => { typeof s.unmount == "function" && s.unmount() }) }) })) } var vn = () => nt.injectCSS(".vi--icon-container{display:inline-flex;align-items:center;justify-content:center;background-color:#00000080;border-radius:50%;width:18px;height:18px;min-width:18px;min-height:18px;margin-left:4px;z-index:99}.vi--icon{display:flex;transition:filter .1s ease-in-out;color:#fff;width:14px;height:14px}.vi--icon:hover{filter:brightness(1.2)}.vi--red-dot{width:10px;height:10px;border-radius:50%;background-color:#ed4245;box-shadow:0 0 4px #ed4245}.vi--hidden{display:none!important}.vi--modal-root{display:flex;flex-direction:column}.vi--modal-root .vi--modal-header{display:flex;align-items:center;justify-content:space-between;padding:16px}.vi--modal-root .vi--modal-header .title{font-size:28px;font-weight:600;color:#efefef}.vi--modal-root .vi--modal-header .vi--modal-close{width:24px;height:24px}.vi--modal-root .vi--modal-header .vi--modal-close svg{width:24px;height:24px}.vi--modal-root .vi--modal-content{padding:0 16px 16px;display:flex;flex-direction:column}.vi--modal-root .vi--modal-content .tabs{display:flex;gap:4px;overflow-x:auto;padding-bottom:2px}.vi--modal-root .vi--modal-content .tabs .item{width:fit-content;display:flex;align-items:center;justify-content:center;padding:8px;opacity:.75;background-color:#00000040;border-top-left-radius:8px;border-top-right-radius:8px;cursor:pointer;border-bottom:2px solid transparent}.vi--modal-root .vi--modal-content .tabs .item>.content{display:flex;align-items:center;gap:4px}.vi--modal-root .vi--modal-content .tabs .item>.content .icon{width:32px;height:32px;min-width:32px;min-height:32px;background-position:center;background-size:contain;border-radius:50%;background-color:#5865f2}.vi--modal-root .vi--modal-content .tabs .item>.content .name{font-size:16px;color:#efefef;max-width:128px;overflow:hidden;white-space:nowrap;text-overflow:ellipsis}.vi--modal-root .vi--modal-content .tabs .item>.content .vanity svg{width:14px;height:14px}.vi--modal-root .vi--modal-content .tabs .item:hover{opacity:.85;border-bottom:2px solid rgba(255,255,255,.75)}.vi--modal-root .vi--modal-content .tabs .item.active{opacity:1;border-bottom:2px solid white}.vi--modal-root .vi--modal-content>.content{margin-top:8px}.vi--modal-root .vi--modal-content>.content>.channel>.name-container{display:flex;align-items:center;justify-content:space-between;background-color:#00000040;padding:8px;border-radius:8px}.vi--modal-root .vi--modal-content>.content>.channel>.name-container>.name{display:flex;font-size:20px;font-weight:400;color:#efefef;align-items:center}.vi--modal-root .vi--modal-content>.content>.channel>.name-container>.name svg{margin-right:8px;width:24px;height:24px;pointer-events:none}.vi--modal-root .vi--modal-content>.content>.channel>.name-container>.controls{display:flex}.vi--modal-root .vi--modal-content>.content>.channel>.name-container>.controls>.control{padding:4px;cursor:pointer}.vi--modal-root .vi--modal-content>.content>.channel>.name-container>.controls>.control svg{width:24px;height:24px}.vi--modal-root .vi--modal-content>.content>.channel>.members-container{padding:8px 8px 8px 40px}.vi--modal-root .vi--modal-content>.content>.channel>.members-container>.members{display:flex;flex-direction:column;overflow:auto;max-height:500px;height:100%}.vi--modal-root .vi--modal-content>.content>.channel>.members-container>.members .member{display:flex;margin-bottom:4px;cursor:pointer;width:min-content;align-items:center}.vi--modal-root .vi--modal-content>.content>.channel>.members-container>.members .member>.avatar{width:32px;height:32px;border-radius:50%;background-position:center;background-size:contain;margin-right:8px;background-color:#5865f2}.vi--modal-root .vi--modal-content>.content>.channel>.members-container>.members .member>.about{border-radius:9999px;background-color:#0003;display:flex;align-items:center;padding:8px}.vi--modal-root .vi--modal-content>.content>.channel>.members-container>.members .member>.about>.name-container{display:flex;align-items:center;width:max-content;font-size:16px;color:#dfdfdf}.vi--modal-root .vi--modal-content>.content>.channel>.members-container>.members .member>.about>.name-container .name{width:100%}.vi--modal-root .vi--modal-content>.content>.channel>.members-container>.members .member>.about>.name-container .discriminator{opacity:.5}.vi--modal-root .vi--modal-content>.content>.channel>.members-container>.members .member>.about>.state{background-color:transparent;margin-left:4px}.vi--modal-root .vi--modal-content>.content>.channel>.members-container>.members .member>.about>.state svg{width:16px;height:16px}[class*=userText-] [class*=nameTag-],[class*=topSection-] [class*=nameTag-]{display:flex;align-items:center}[class*=userText-] [class*=nameTag-] *,[class*=topSection-] [class*=nameTag-] *{overflow:hidden}[class*=vi--],[class*=vi--] *{box-sizing:border-box}.vi--cant-join{opacity:.75}.vi--cant-click{cursor:default!important}"); function bn() { k.add(vn()) } var g = {}, P = {}, $ = {}; $.isThenable = function (e) { return e != null && typeof e.then == "function" }, $.isArrayLike = function (e) { return e != null && typeof e.length == "number" && e.length >= 0 }; const { isArrayLike: Cn } = $; P.forEach = function (n, e, t) { let s = 0, i; if (Cn(n)) return i = n.length, { next() { if (s >= i) return [!0, null]; const o = e.call(t, n[s], s, n); return s++, [!1, o] } }; const r = Object.keys(n); return i = r.length, { next() { if (s >= i) return [!0, null]; const o = r[s++], a = e.call(t, n[o], o, n); return [!1, a] } } }, P.repeat = function (n, e, t) { let s, i, r; return n && typeof n == "object" ? (s = n.start || 0, i = n.step || 1, r = n.done) : (s = 0, i = 1, r = n), { next() { const o = e.call(t, s); return s += i, s >= r ? [!0, o] : [!1, o] } } }, P.until = function (n, e) { return { next() { const t = n.call(e); return [!1, t] } } }, P.forOf = function (n, e, t) { const s = n[Symbol.iterator](); return { next() { const i = s.next(); if (i.done) return [!0, null]; const r = e.call(t, i.value, n); return [!1, r] } } }; var ze = {}, Fe = (() => { if (typeof setImmediate == "function") return n => { setImmediate(n) }; if (typeof process == "object" && typeof process.nextTick == "function") return n => { process.nextTick(n) }; if (typeof MessageChannel == "function") { const n = new MessageChannel; let e = {}, t = e; return n.port1.onmessage = () => { e = e.next; const s = e.task; delete e.task, s() }, s => { t = t.next = { task: s }, n.port2.postMessage(0) } } return n => { setTimeout(n, 0) } })(); const { isThenable: wn } = $, Ye = ze, je = Fe, Ze = 1500; var En = function (e, t = 0) { return new Promise((s, i) => { let r = 0; function o() { const a = Date.now(); let h; try { for (; ;) { const [f, v] = e.next(); if (wn(v)) { v.then(N => { f ? s(N) : N === Ye ? s() : o() }, i); return } if (f) { s(v); return } if (v === Ye) { s(); return } if (t > 0 || (h = Date.now() - a, r += h, r > 1e3)) break; if (!(h < 10)) break } } catch (f) { i(f); return } if (t > 0) { const f = Math.min(Ze, Date.now() - a + t); setTimeout(o, f) } else { const f = Math.min(Ze, h / 3); r = 0, f > 10 ? setTimeout(o, f) : je(o) } } je(o) }) }, kn = "chillout", xn = "Reduce CPU usage by non-blocking async loop and psychologically speed up in JavaScript", An = "5.0.0", Nn = "polygon planet <polygon.planet.aqua@gmail.com>", Tn = { url: "https://github.com/polygonplanet/chillout/issues" }, _n = { "@babel/core": "^7.8.3", "@babel/preset-env": "^7.8.3", babelify: "^10.0.0", bannerify: "^1.0.1", browserify: "^16.5.0", "es6-shim": "^0.35.5", eslint: "^6.8.0", karma: "^4.4.1", "karma-browserify": "^6.1.0", "karma-chrome-launcher": "^3.1.0", "karma-detect-browsers": "^2.3.3", "karma-es6-shim": "^1.0.0", "karma-firefox-launcher": "^1.3.0", "karma-ie-launcher": "^1.0.0", "karma-mocha": "^1.3.0", "karma-mocha-reporter": "^2.2.5", "karma-safari-launcher": "^1.0.0", mocha: "^7.0.0", "package-json-versionify": "^1.0.4", pidusage: "1.0.2", "power-assert": "^1.6.1", "uglify-js": "^3.7.5", uglifyify: "^5.0.2", watchify: "^3.11.1" }, Rn = { node: ">=8.10.0" }, Sn = ["dist/*", "src/*"], Ln = "https://github.com/polygonplanet/chillout", On = ["acceleration", "async await", "asynchronous", "cpu use rate", "cpu utilization rate", "heavy processing", "iterate", "iteration", "lightweight", "nextTick", "non-blocking", "optimization", "optimize for loop", "performance", "promise", "reduce cpu usage", "setimmediate", "waitUntil"], In = "MIT", Bn = "src/index.js", Vn = { type: "git", url: "https://github.com/polygonplanet/chillout.git" }, Dn = { benchmark: "node benchmark/benchmark", build: "npm run compile && npm run minify", compile: "browserify src/index.js -o dist/chillout.js -s chillout -p [ bannerify --file src/banner.js ] --no-bundle-external --bare", minify: "uglifyjs dist/chillout.js -o dist/chillout.min.js --comments -c -m -b ascii_only=true,beautify=false", test: "./node_modules/.bin/eslint . && npm run build && mocha test/**/*.spec.js --timeout 10000 && karma start karma.conf.js", travis: "npm run build && mocha test/**/*.spec.js --timeout 10000 && karma start karma.conf.js --single-run", watch: "watchify src/index.js -o dist/chillout.js -s chillout -p [ bannerify --file src/banner.js ] --no-bundle-external --bare --poll=200 -v" }, Mn = { transform: ["babelify", "package-json-versionify"] }, Pn = { name: kn, description: xn, version: An, author: Nn, bugs: Tn, devDependencies: _n, engines: Rn, files: Sn, homepage: Ln, keywords: On, license: In, main: Bn, repository: Vn, scripts: Dn, browserify: Mn }; const O = P, I = En, { isThenable: $n, isArrayLike: qn } = $, Hn = Fe, Un = ze; g.version = Pn.version, g.forEach = function (e, t, s) { return I(O.forEach(e, t, s)) }, g.repeat = function (e, t, s) { return I(O.repeat(e, t, s)) }, g.until = function (e, t) { return I(O.until(e, t)) }; const zn = 13; g.waitUntil = function (e, t) { return I(O.until(e, t), zn) }, g.forOf = function (e, t, s) { return I(O.forOf(e, t, s)) }, g.StopIteration = Un, g.iterate = I, g.iterator = O, g.isThenable = $n, g.isArrayLike = qn, g.nextTick = Hn; function Fn() { k.add((() => { let n = 0; y.lastVoiceStates = []; async function e() { if (n) return; let t = Gt(); E.emit("bulkUpdate", t), await new Promise(s => setTimeout(s, p.persist.ghost.settings.performanceMode ? 1e4 : 5e3)), e() } return e(), () => { n = 1, y.lastVoiceStates = [] } })()), k.add(q.default.interval(() => { y.lastVoiceStates = [] }, 6e4 * 30)) } function Yn() { k.add(() => { y.lastVoiceStates = [], y.responseCache = new Map, y.stateRequestCache = [] }), k.add(q.default.interval(() => { y.responseCache.forEach((n, e) => { Date.now() - n.at > n.ttl && y.responseCache.delete(e) }) }, 1e3)), k.add((() => { let n = 0; async function e() { n || (y.stateRequestCache[0] && (async () => { let t = [...y.stateRequestCache]; y.stateRequestCache = []; let s = (await Ve("bulkState", [...new Set(t.map(i => i[0]))]))?.data || []; await g.forEach(s, i => { t.filter(o => o[0] === i[0]).forEach(o => { o[1](i[1] || []) }) }) })(), await new Promise(t => setTimeout(t, p.persist.ghost.settings.performanceMode ? 1e3 : 5e3)), e()) } return e(), () => { n = 1 } })()) } var jn = { load() { gn(), bn(), en(), Yn(), Fn(), E.connect() }, unload() { k.removeAll(), E.disconnect() }, settings: { data: [{ type: "header", name: "Privacy" }, { type: "checkbox", name: "Do Not Share Private Data", description: "When this setting is on, your private information will not be shared with the other party. However, you will not be able to see other people's private information.", property: "redacted", value: !1 }, { type: "header", name: "Other" }, { type: "checkbox", name: "Ignore Bots", description: "Do not show voice indicators on bots.", property: "ignoreBots", value: !0 }, { type: "checkbox", name: "Performance Mode", description: "Slower checks.", property: "performanceMode", value: !1 }] } }; return jn
})(acord.modules.webpack, acord.modules.common, acord.extension, acord.events, acord.dom, acord.utils, acord.modules.common.React, acord.ui.toasts, acord.ui.modals, acord.patcher);
